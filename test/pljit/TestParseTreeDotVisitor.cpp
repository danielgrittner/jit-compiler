#include "pljit/common/SourceCodeManager.h"
#include "pljit/parse_tree/ParseTree.h"
#include "pljit/parse_tree/ParseTreeDotVisitor.h"
#include "pljit/parser/Parser.h"
#include <gtest/gtest.h>

namespace pljit::parse_tree {

namespace {

void executeTest(std::string_view code, std::string_view expectedDotGraph) {
    common::SourceCodeManager sourceCodeManager(std::string{code});
    parser::Parser parser(sourceCodeManager);
    auto parseTree = parser.parseFunctionDefinition();
    ASSERT_FALSE(parseTree == nullptr);

    std::ostringstream buffer;
    ParseTreeDotVisitor visitor(buffer);
    parseTree->accept(visitor);

    ASSERT_EQ(buffer.str(), expectedDotGraph);
}

} // namespace

TEST(TestParseTreeDotVisitor, SimpleTest) { // NOLINT
    std::string_view code{"BEGIN\n"
                          "RETURN 123"
                          "END.\n"};

    std::string_view expectedParseTreeInDot{"digraph {\n"
                                            "\t0 [label=\"function-definition\"];\n"
                                            "\t1 [label=\"compound-statement\"];\n"
                                            "\t2 [label=\"BEGIN\"];\n"
                                            "\t3 [label=\"statement-list\"];\n"
                                            "\t4 [label=\"statement\"];\n"
                                            "\t5 [label=\"RETURN\"];\n"
                                            "\t6 [label=\"additive-expression\"];\n"
                                            "\t7 [label=\"multiplicative-expression\"];\n"
                                            "\t8 [label=\"unary-expression\"];\n"
                                            "\t9 [label=\"primary-expression\"];\n"
                                            "\t10 [label=\"123\"];\n"
                                            "\t11 [label=\"END\"];\n"
                                            "\t12 [label=\".\"];\n"
                                            "\t0 -> 1;\n"
                                            "\t1 -> 2;\n"
                                            "\t1 -> 3;\n"
                                            "\t3 -> 4;\n"
                                            "\t4 -> 5;\n"
                                            "\t4 -> 6;\n"
                                            "\t6 -> 7;\n"
                                            "\t7 -> 8;\n"
                                            "\t8 -> 9;\n"
                                            "\t9 -> 10;\n"
                                            "\t1 -> 11;\n"
                                            "\t0 -> 12;\n"
                                            "}\n"};

    executeTest(code, expectedParseTreeInDot);
}

TEST(TestParseTreeDotVisitor, ComplexProgram) { // NOLINT
    std::string_view code{"PARAM a, b, c;\n"
                          "VAR d, e, f;\n"
                          "CONST A = 12, B = 34;\n"
                          "BEGIN\n"
                          "     RETURN 1\n"
                          "END.\n"};

    std::string_view expectedParseTreeInDot{"digraph {\n"
                                            "\t0 [label=\"function-definition\"];\n"
                                            "\t1 [label=\"parameter-declarations\"];\n"
                                            "\t2 [label=\"PARAM\"];\n"
                                            "\t3 [label=\"declarator-list\"];\n"
                                            "\t4 [label=\"a\"];\n"
                                            "\t5 [label=\",\"];\n"
                                            "\t6 [label=\"b\"];\n"
                                            "\t7 [label=\",\"];\n"
                                            "\t8 [label=\"c\"];\n"
                                            "\t9 [label=\";\"];\n"
                                            "\t10 [label=\"variable-declarations\"];\n"
                                            "\t11 [label=\"VAR\"];\n"
                                            "\t12 [label=\"declarator-list\"];\n"
                                            "\t13 [label=\"d\"];\n"
                                            "\t14 [label=\",\"];\n"
                                            "\t15 [label=\"e\"];\n"
                                            "\t16 [label=\",\"];\n"
                                            "\t17 [label=\"f\"];\n"
                                            "\t18 [label=\";\"];\n"
                                            "\t19 [label=\"constant-declarations\"];\n"
                                            "\t20 [label=\"CONST\"];\n"
                                            "\t21 [label=\"init-declarator-list\"];\n"
                                            "\t22 [label=\"init-declarator\"];\n"
                                            "\t23 [label=\"A\"];\n"
                                            "\t24 [label=\"=\"];\n"
                                            "\t25 [label=\"12\"];\n"
                                            "\t26 [label=\",\"];\n"
                                            "\t27 [label=\"init-declarator\"];\n"
                                            "\t28 [label=\"B\"];\n"
                                            "\t29 [label=\"=\"];\n"
                                            "\t30 [label=\"34\"];\n"
                                            "\t31 [label=\";\"];\n"
                                            "\t32 [label=\"compound-statement\"];\n"
                                            "\t33 [label=\"BEGIN\"];\n"
                                            "\t34 [label=\"statement-list\"];\n"
                                            "\t35 [label=\"statement\"];\n"
                                            "\t36 [label=\"RETURN\"];\n"
                                            "\t37 [label=\"additive-expression\"];\n"
                                            "\t38 [label=\"multiplicative-expression\"];\n"
                                            "\t39 [label=\"unary-expression\"];\n"
                                            "\t40 [label=\"primary-expression\"];\n"
                                            "\t41 [label=\"1\"];\n"
                                            "\t42 [label=\"END\"];\n"
                                            "\t43 [label=\".\"];\n"
                                            "\t0 -> 1;\n"
                                            "\t1 -> 2;\n"
                                            "\t1 -> 3;\n"
                                            "\t3 -> 4;\n"
                                            "\t3 -> 5;\n"
                                            "\t3 -> 6;\n"
                                            "\t3 -> 7;\n"
                                            "\t3 -> 8;\n"
                                            "\t1 -> 9;\n"
                                            "\t0 -> 10;\n"
                                            "\t10 -> 11;\n"
                                            "\t10 -> 12;\n"
                                            "\t12 -> 13;\n"
                                            "\t12 -> 14;\n"
                                            "\t12 -> 15;\n"
                                            "\t12 -> 16;\n"
                                            "\t12 -> 17;\n"
                                            "\t10 -> 18;\n"
                                            "\t0 -> 19;\n"
                                            "\t19 -> 20;\n"
                                            "\t19 -> 21;\n"
                                            "\t21 -> 22;\n"
                                            "\t22 -> 23;\n"
                                            "\t22 -> 24;\n"
                                            "\t22 -> 25;\n"
                                            "\t21 -> 26;\n"
                                            "\t21 -> 27;\n"
                                            "\t27 -> 28;\n"
                                            "\t27 -> 29;\n"
                                            "\t27 -> 30;\n"
                                            "\t19 -> 31;\n"
                                            "\t0 -> 32;\n"
                                            "\t32 -> 33;\n"
                                            "\t32 -> 34;\n"
                                            "\t34 -> 35;\n"
                                            "\t35 -> 36;\n"
                                            "\t35 -> 37;\n"
                                            "\t37 -> 38;\n"
                                            "\t38 -> 39;\n"
                                            "\t39 -> 40;\n"
                                            "\t40 -> 41;\n"
                                            "\t32 -> 42;\n"
                                            "\t0 -> 43;\n"
                                            "}\n"};

    executeTest(code, expectedParseTreeInDot);
}

TEST(TestParseTreeDotVisitor, ComplexStatement) { // NOLINT
    std::string_view code{"BEGIN\n"
                          "      a := -1234 + ((a * b) / 12);\n"
                          "      c := a * A + B;\n"
                          "      RETURN a / c\n"
                          "END.\n"};

    std::string_view expectedParseTreeInDot{"digraph {\n"
                                            "\t0 [label=\"function-definition\"];\n"
                                            "\t1 [label=\"compound-statement\"];\n"
                                            "\t2 [label=\"BEGIN\"];\n"
                                            "\t3 [label=\"statement-list\"];\n"
                                            "\t4 [label=\"statement\"];\n"
                                            "\t5 [label=\"assignment-expression\"];\n"
                                            "\t6 [label=\"a\"];\n"
                                            "\t7 [label=\":=\"];\n"
                                            "\t8 [label=\"additive-expression\"];\n"
                                            "\t9 [label=\"multiplicative-expression\"];\n"
                                            "\t10 [label=\"unary-expression\"];\n"
                                            "\t11 [label=\"-\"];\n"
                                            "\t12 [label=\"primary-expression\"];\n"
                                            "\t13 [label=\"1234\"];\n"
                                            "\t14 [label=\"+\"];\n"
                                            "\t15 [label=\"additive-expression\"];\n"
                                            "\t16 [label=\"multiplicative-expression\"];\n"
                                            "\t17 [label=\"unary-expression\"];\n"
                                            "\t18 [label=\"primary-expression\"];\n"
                                            "\t19 [label=\"(\"];\n"
                                            "\t20 [label=\"additive-expression\"];\n"
                                            "\t21 [label=\"multiplicative-expression\"];\n"
                                            "\t22 [label=\"unary-expression\"];\n"
                                            "\t23 [label=\"primary-expression\"];\n"
                                            "\t24 [label=\"(\"];\n"
                                            "\t25 [label=\"additive-expression\"];\n"
                                            "\t26 [label=\"multiplicative-expression\"];\n"
                                            "\t27 [label=\"unary-expression\"];\n"
                                            "\t28 [label=\"primary-expression\"];\n"
                                            "\t29 [label=\"a\"];\n"
                                            "\t30 [label=\"*\"];\n"
                                            "\t31 [label=\"multiplicative-expression\"];\n"
                                            "\t32 [label=\"unary-expression\"];\n"
                                            "\t33 [label=\"primary-expression\"];\n"
                                            "\t34 [label=\"b\"];\n"
                                            "\t35 [label=\")\"];\n"
                                            "\t36 [label=\"/\"];\n"
                                            "\t37 [label=\"multiplicative-expression\"];\n"
                                            "\t38 [label=\"unary-expression\"];\n"
                                            "\t39 [label=\"primary-expression\"];\n"
                                            "\t40 [label=\"12\"];\n"
                                            "\t41 [label=\")\"];\n"
                                            "\t42 [label=\";\"];\n"
                                            "\t43 [label=\"statement\"];\n"
                                            "\t44 [label=\"assignment-expression\"];\n"
                                            "\t45 [label=\"c\"];\n"
                                            "\t46 [label=\":=\"];\n"
                                            "\t47 [label=\"additive-expression\"];\n"
                                            "\t48 [label=\"multiplicative-expression\"];\n"
                                            "\t49 [label=\"unary-expression\"];\n"
                                            "\t50 [label=\"primary-expression\"];\n"
                                            "\t51 [label=\"a\"];\n"
                                            "\t52 [label=\"*\"];\n"
                                            "\t53 [label=\"multiplicative-expression\"];\n"
                                            "\t54 [label=\"unary-expression\"];\n"
                                            "\t55 [label=\"primary-expression\"];\n"
                                            "\t56 [label=\"A\"];\n"
                                            "\t57 [label=\"+\"];\n"
                                            "\t58 [label=\"additive-expression\"];\n"
                                            "\t59 [label=\"multiplicative-expression\"];\n"
                                            "\t60 [label=\"unary-expression\"];\n"
                                            "\t61 [label=\"primary-expression\"];\n"
                                            "\t62 [label=\"B\"];\n"
                                            "\t63 [label=\";\"];\n"
                                            "\t64 [label=\"statement\"];\n"
                                            "\t65 [label=\"RETURN\"];\n"
                                            "\t66 [label=\"additive-expression\"];\n"
                                            "\t67 [label=\"multiplicative-expression\"];\n"
                                            "\t68 [label=\"unary-expression\"];\n"
                                            "\t69 [label=\"primary-expression\"];\n"
                                            "\t70 [label=\"a\"];\n"
                                            "\t71 [label=\"/\"];\n"
                                            "\t72 [label=\"multiplicative-expression\"];\n"
                                            "\t73 [label=\"unary-expression\"];\n"
                                            "\t74 [label=\"primary-expression\"];\n"
                                            "\t75 [label=\"c\"];\n"
                                            "\t76 [label=\"END\"];\n"
                                            "\t77 [label=\".\"];\n"
                                            "\t0 -> 1;\n"
                                            "\t1 -> 2;\n"
                                            "\t1 -> 3;\n"
                                            "\t3 -> 4;\n"
                                            "\t4 -> 5;\n"
                                            "\t5 -> 6;\n"
                                            "\t5 -> 7;\n"
                                            "\t5 -> 8;\n"
                                            "\t8 -> 9;\n"
                                            "\t9 -> 10;\n"
                                            "\t10 -> 11;\n"
                                            "\t10 -> 12;\n"
                                            "\t12 -> 13;\n"
                                            "\t8 -> 14;\n"
                                            "\t8 -> 15;\n"
                                            "\t15 -> 16;\n"
                                            "\t16 -> 17;\n"
                                            "\t17 -> 18;\n"
                                            "\t18 -> 19;\n"
                                            "\t18 -> 20;\n"
                                            "\t20 -> 21;\n"
                                            "\t21 -> 22;\n"
                                            "\t22 -> 23;\n"
                                            "\t23 -> 24;\n"
                                            "\t23 -> 25;\n"
                                            "\t25 -> 26;\n"
                                            "\t26 -> 27;\n"
                                            "\t27 -> 28;\n"
                                            "\t28 -> 29;\n"
                                            "\t26 -> 30;\n"
                                            "\t26 -> 31;\n"
                                            "\t31 -> 32;\n"
                                            "\t32 -> 33;\n"
                                            "\t33 -> 34;\n"
                                            "\t23 -> 35;\n"
                                            "\t21 -> 36;\n"
                                            "\t21 -> 37;\n"
                                            "\t37 -> 38;\n"
                                            "\t38 -> 39;\n"
                                            "\t39 -> 40;\n"
                                            "\t18 -> 41;\n"
                                            "\t3 -> 42;\n"
                                            "\t3 -> 43;\n"
                                            "\t43 -> 44;\n"
                                            "\t44 -> 45;\n"
                                            "\t44 -> 46;\n"
                                            "\t44 -> 47;\n"
                                            "\t47 -> 48;\n"
                                            "\t48 -> 49;\n"
                                            "\t49 -> 50;\n"
                                            "\t50 -> 51;\n"
                                            "\t48 -> 52;\n"
                                            "\t48 -> 53;\n"
                                            "\t53 -> 54;\n"
                                            "\t54 -> 55;\n"
                                            "\t55 -> 56;\n"
                                            "\t47 -> 57;\n"
                                            "\t47 -> 58;\n"
                                            "\t58 -> 59;\n"
                                            "\t59 -> 60;\n"
                                            "\t60 -> 61;\n"
                                            "\t61 -> 62;\n"
                                            "\t3 -> 63;\n"
                                            "\t3 -> 64;\n"
                                            "\t64 -> 65;\n"
                                            "\t64 -> 66;\n"
                                            "\t66 -> 67;\n"
                                            "\t67 -> 68;\n"
                                            "\t68 -> 69;\n"
                                            "\t69 -> 70;\n"
                                            "\t67 -> 71;\n"
                                            "\t67 -> 72;\n"
                                            "\t72 -> 73;\n"
                                            "\t73 -> 74;\n"
                                            "\t74 -> 75;\n"
                                            "\t1 -> 76;\n"
                                            "\t0 -> 77;\n"
                                            "}\n"};

    executeTest(code, expectedParseTreeInDot);
}

} // namespace pljit::parse_tree
